name: mcp-publisher
version: '1.1.0'
summary: MCP Registry CLI
description: |
  MCP Registry CLI (`mcp-publisher`) is a command-line tool for publishing and updating Model Context Protocol (MCP) servers in the GitHub MCP Registry.

  **Quick Start**:
  - Create the `server.json` file and edit it afterward to suit your project: `mcp-publisher init`
  - Authenticate with your GitHub account: `mcp-publisher login github`
  - Publish the MCP server to the registry: `mcp-publisher publish`

  **Important Notes**:
  - This is an unofficial Snap package.

base: core24
confinement: strict
grade: stable
compression: lzo
assumes:
  - snapd2.54

license: MIT
website: https://github.com/modelcontextprotocol/registry
contact: https://github.com/habedi
source-code: https://github.com/modelcontextprotocol/registry
issues:
  - https://github.com/modelcontextprotocol/registry/issues
  - https://github.com/habedi/registry-cli-snap/issues
donation:
  - https://github.com/sponsors/habedi

platforms:
  amd64:
    build-on: [ amd64 ]
    build-for: [ amd64 ]
  arm64:
    build-on: [ arm64 ]
    build-for: [ arm64 ]

parts:
  mcp-publisher:
    plugin: nil
    build-packages:
      - curl
      - ca-certificates
      - tar
    override-build: |
      set -euo pipefail

      # Manually install cosign as it's not in the default repos.
      echo "Installing cosign..."
      COSIGN_VERSION="v2.2.4"
      # The cosign binary to download now depends on the build architecture
      case "$(dpkg --print-architecture)" in
        amd64) COSIGN_ARCH="amd64" ;;
        arm64) COSIGN_ARCH="arm64" ;;
        *) echo "Unsupported architecture for cosign download"; exit 1 ;;
      esac
      curl -L --fail -o cosign "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-${COSIGN_ARCH}"
      install cosign /usr/local/bin/cosign

      VERSION="${CRAFT_PROJECT_VERSION:-1.1.0}"
      ARCH="${CRAFT_ARCH_BUILD_FOR:-${CRAFT_ARCH_BUILD_ON:-$(dpkg --print-architecture)}}"
      echo "Building for target architecture: $ARCH"

      FILENAME_BASE=""
      case "$ARCH" in
        amd64)
          FILENAME_BASE="mcp-publisher_${VERSION}_linux_amd64"
          ;;
        arm64)
          FILENAME_BASE="mcp-publisher_${VERSION}_linux_arm64"
          ;;
        *)
          echo "Unsupported architecture: $ARCH" >&2
          exit 1
          ;;
      esac

      # Define all the files using the base name
      TARBALL="${FILENAME_BASE}.tar.gz"
      SIGNATURE_FILE="${FILENAME_BASE}.tar.gz.sig"
      PUBLIC_KEY_FILE="${FILENAME_BASE}.pem"

      URL_BASE="https://github.com/modelcontextprotocol/registry/releases/download/v${VERSION}"

      # Download all three architecture-specific files
      echo "Downloading $TARBALL, signature, and public key..."
      curl -L --fail -o "$TARBALL" "$URL_BASE/$TARBALL"
      curl -L --fail -o "$SIGNATURE_FILE" "$URL_BASE/$SIGNATURE_FILE"
      curl -L --fail -o "$PUBLIC_KEY_FILE" "$URL_BASE/$PUBLIC_KEY_FILE"

      # Verify the signature with the correct key and identity
      echo "Verifying signature..."
      cosign verify-blob --certificate "$PUBLIC_KEY_FILE" --signature "$SIGNATURE_FILE" \
        --certificate-identity "https://github.com/modelcontextprotocol/registry/.github/workflows/release.yml@refs/tags/v${VERSION}" \
        --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
        "$TARBALL"

      echo "Extracting ..."
      tar -xzf "$TARBALL"

      echo "Installing binary ..."
      install -Dm0755 mcp-publisher "$CRAFT_PART_INSTALL/mcp-publisher"

      echo "Fetching LICENSE ..."
      curl -L --fail -o LICENSE https://raw.githubusercontent.com/modelcontextprotocol/registry/refs/heads/main/LICENSE
      install -Dm0644 LICENSE "$CRAFT_PART_INSTALL/LICENSE"
    stage:
      - mcp-publisher
      - LICENSE

apps:
  mcp-publisher:
    command: mcp-publisher
    aliases: [ registry-cli ]
    plugs:
      - home
      - removable-media
      - network
      - network-bind
      - system-observe

